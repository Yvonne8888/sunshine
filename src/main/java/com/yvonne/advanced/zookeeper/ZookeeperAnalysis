Zookeeper注册中心
    也可以作为分布式锁的一种实现，数据结构：树形数据结构，每个节点叫ZNode，ZNode分为两种：短暂/临时和持久。
    监听器：监听ZNode节点的数据变化，监听子节点的增减变化。

    统一配置管理 {
        把公共配置抽取出来，存放于zookeeper中并落地数据库。
        对公共配置进行维护，修改后发布到zookeeper中并落地数据库。
        修改公共配置后应用不需要重新部署，开启配置实时监听zookeeper配置文件一旦被修改，应用可实时监听到并获取。
    }

    统一命名服务 {
        为某一部分的资源统一命名，通过此命名就可拿到对应的资源、
        比如，有个域名www.yvonne.com，但这个域名下多台机器192.168.1.1/192.168.1.2/192.168.1.3，
            通过访问www.yvonne.com即可访问到所有机器，而不用通过IP访问
    }

    分布式锁 {
        访问的时候会创建带顺序号的临时/短暂(EPHEMERAL_SEQUENTIAL)节点，判断自己创建的是不是最小的那个节点，
        如果是，则拿到锁，释放锁：执行完操作后，把创建的节点给删掉；如果不是，则监听比自己要小1的节点变化。
    }

    集群管理 {
        Zookeeper会每次选举最小编号的作为Master，如果Master挂了，自然对应的Znode节点就会删除。然后让新的最小编号作为Master，
            这样就可以实现动态选举的功能了。
    }